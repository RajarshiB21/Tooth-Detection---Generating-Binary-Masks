# -*- coding: utf-8 -*-
"""maskgen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BKVVk2IGh7CRwdVvgn0zA3uwm7K4Y3tM
"""

!pip install imgaug

!pip install matplotlib==3.3.0

import os 
import cv2
import matplotlib.pyplot as plt 
from PIL import Image
import json
import numpy as np
import numpy as np
import imgaug as ia
from imgaug import augmenters as iaa

def plot_pair(images, gray=False):

    fig, axes = plt.subplots(nrows=1, ncols=2, sharex=False, sharey=False, figsize=(20,10))
    i=0
    
    for y in range(2):
        if gray:
            axes[y].imshow(images[i], cmap='gray')
        else:
            axes[y].imshow(images[i])
        axes[y].get_xaxis().set_visible(False)
        axes[y].get_yaxis().set_visible(False)
        i+=1
    
    plt.show()

def get_poly(ann_path):

  with open(ann_path) as handle:
    data = json.load(handle)

  shape_dicts = data['shapes']

  return shape_dicts

def create_binary_masks(im, shape_dicts):

  blank = np.zeros(shape=(im.shape[0], im.shape[1]), dtype=np.float32)

  for shape in shape_dicts:
    points = np.array(shape['points'], np.int32)
    cv2.fillPoly(blank, [points], 255)

  return blank

import os

path = '/content/drive/MyDrive/mask_gen_demo/masks'

# Check whether the specified path exists or not
isExist = os.path.exists(path)

if not isExist:
  
  # Create a new directory because it does not exist 
  os.makedirs(path)
  print("The new directory is created!")

"""***Create Binary Masks***"""

image_list = sorted(os.listdir('/content/drive/MyDrive/mask_gen_demo/images'), key=lambda x: int(x.split('.')[0]))
annot_list = sorted(os.listdir('/content/drive/MyDrive/mask_gen_demo/annotations'), key=lambda x: int(x.split('.')[0]))

for im_fn, ann_fn in zip(image_list, annot_list):
    
    im = cv2.imread(os.path.join('/content/drive/MyDrive/mask_gen_demo/images', im_fn))
    
    ann_path = os.path.join('/content/drive/MyDrive/mask_gen_demo/annotations', ann_fn)
    shape_dicts = get_poly(ann_path)
    im_binary = create_binary_masks(im, shape_dicts)
    
    plot_pair([im, im_binary], gray=True)
    plt.show()
    print(os.path.splitext(im_fn)[0])
    #break

os.listdir('/content/drive/MyDrive/mask_gen_demo/images')

source_folder = os.path.join(os.getcwd(), "/content/drive/MyDrive/mask_gen_demo/images")
source_folder

import os

path = '/content/drive/MyDrive/mask_gen_demo/masks'

# Check whether the specified path exists or not
isExist = os.path.exists(path)

if not isExist:
  
  # Create a new directory because it does not exist 
  os.makedirs(path)
  print("The new directory is created!")

mask_folder= '/content/drive/MyDrive/mask_gen_demo/masks'

image_list = sorted(os.listdir('/content/drive/MyDrive/mask_gen_demo/images'), key=lambda x: int(x.split('.')[0]))
annot_list = sorted(os.listdir('/content/drive/MyDrive/mask_gen_demo/annotations'), key=lambda x: int(x.split('.')[0]))

for im_fn, ann_fn in zip(image_list, annot_list):
    
    im = cv2.imread(os.path.join('/content/drive/MyDrive/mask_gen_demo/images', im_fn))
    
    ann_path = os.path.join('/content/drive/MyDrive/mask_gen_demo/annotations', ann_fn)
    shape_dicts = get_poly(ann_path)
    im_binary = create_binary_masks(im, shape_dicts)
    
    plot_pair([im, im_binary], gray=True)
    plt.show()
    im_name = os.path.splitext(im_fn)[0]
    #break
    cv2.imwrite(os.path.join(mask_folder, im_name + ".png") , im_binary)
    print("mask saved")

